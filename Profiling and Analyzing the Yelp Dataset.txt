Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000 
v. elite_years table = 10000 
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	
code:
select count(*)
from table name


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = ID: 10000
ii. Hours = business_id: 1562
iii. Category = business_id: 2643
iv. Attribute = business_id: 1115
v. Review = primary key: ID: 10000. foreign key : business_id : 8090; user_id: 9581
vi. Checkin = business_id : 493
vii. Photo = primary key: ID: 10000. foreign key : business_id: 6493
viii. Tip = user_id: 537; business_id: 3979
ix. User = ID: 10000
x. Friend = user_id: 11
xi. Elite_years =user_id : 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	

code:
select count(distinct primary key/foreign key)
from  table name


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:

select 
sum(case when id is null then 1 else 0 end) as x1,
sum(case when name is null then 1 else 0 end) as x2,
sum(case when review_count is null then 1 else 0 end) as x3,
sum(case when yelping_since is null then 1 else 0 end) as x4,
sum(case when useful is null then 1 else 0 end) as x5,
sum(case when funny is null then 1 else 0 end) as x6,
sum(case when cool is null then 1 else 0 end) as x7,
sum(case when fans is null then 1 else 0 end) as x8,
sum(case when average_stars is null then 1 else 0 end) as x9,
sum(case when compliment_hot is null then 1 else 0 end) as x10,
sum(case when compliment_more is null then 1 else 0 end) as x11,
sum(case when compliment_profile is null then 1 else 0 end) as x12,
sum(case when compliment_cute is null then 1 else 0 end) as x13,
sum(case when compliment_note is null then 1 else 0 end) as x14,
sum(case when compliment_plain is null then 1 else 0 end) as x15,
sum(case when compliment_cool is null then 1 else 0 end) as x16,
sum(case when compliment_funny is null then 1 else 0 end) as x17,
sum(case when compliment_writer is null then 1 else 0 end) as x18,
sum(case when compliment_photos is null then 1 else 0 end) as x19
from  user
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:  3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg:  3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:  1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:24.2995

code:
select min(column)
,max(column)
,avg(column)
from table name
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
select city
,sum(review_count) as tot
from business 
group by city
order by tot desc
	
	
	Copy and Paste the Result Below:
+-----------------+-------+
| city            |   tot |
+-----------------+-------+
| Las Vegas       | 82854 |
| Phoenix         | 34503 |
| Toronto         | 24113 |
| Scottsdale      | 20614 |
| Charlotte       | 12523 |
| Henderson       | 10871 |
| Tempe           | 10504 |
| Pittsburgh      |  9798 |
| Montréal        |  9448 |
| Chandler        |  8112 |
| Mesa            |  6875 |
| Gilbert         |  6380 |
| Cleveland       |  5593 |
| Madison         |  5265 |
| Glendale        |  4406 |
| Mississauga     |  3814 |
| Edinburgh       |  2792 |
| Peoria          |  2624 |
| North Las Vegas |  2438 |
| Markham         |  2352 |
| Champaign       |  2029 |
| Stuttgart       |  1849 |
| Surprise        |  1520 |
| Lakewood        |  1465 |
| Goodyear        |  1155 |
+-----------------+-------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

select city
,stars
,sum(review_count) as tot_review_count
from business 
where city == 'Avon'
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+------+-------+------------------+
| city | stars | tot_review_count |
+------+-------+------------------+
| Avon |   1.5 |               10 |
| Avon |   2.5 |                6 |
| Avon |   3.5 |               88 |
| Avon |   4.0 |               21 |
| Avon |   4.5 |               31 |
| Avon |   5.0 |                3 |
+------+-------+------------------+

ii. Beachwood

SQL code used to arrive at answer:

select city
,stars
,sum(review_count) as tot_review_count
from business 
where city == 'Beachwood'
group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-----------+-------+------------------+
| city      | stars | tot_review_count |
+-----------+-------+------------------+
| Beachwood |   2.0 |                8 |
| Beachwood |   2.5 |                3 |
| Beachwood |   3.0 |               11 |
| Beachwood |   3.5 |                6 |
| Beachwood |   4.0 |               69 |
| Beachwood |   4.5 |               17 |
| Beachwood |   5.0 |               23 |
+-----------+-------+------------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

select distinct name
,review_count
from user 
order by review_count desc
limit 3
	
		
	Copy and Paste the Result Below:
		
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
From the finding, there is no significantly statistical relationship between reviews and fans, which is more reivews
leading to more fans. Each way of ordering review_count or fans does not infer same results. Gerald has the most reivews,but only has 253 fans, ranked NO 4 postion. Amy has the most fans, but the number of review_count not even in the list of top 25.

select name 
,fans
,review_count
from user 
order by review_count desc

+-----------+------+--------------+
| name      | fans | review_count |
+-----------+------+--------------+
| Gerald    |  253 |         2000 |
| Sara      |   50 |         1629 |
| Yuri      |   76 |         1339 |
| .Hon      |  101 |         1246 |
| William   |  126 |         1215 |
| Harald    |  311 |         1153 |
| eric      |   16 |         1116 |
| Roanna    |  104 |         1039 |
| Mimi      |  497 |          968 |
| Christine |  173 |          930 |
| Ed        |   38 |          904 |
| Nicole    |   43 |          864 |
| Fran      |  124 |          862 |
| Mark      |  115 |          861 |
| Christina |   85 |          842 |
| Dominic   |   37 |          836 |
| Lissa     |  120 |          834 |
| Lisa      |  159 |          813 |
| Alison    |   61 |          775 |
| Sui       |   78 |          754 |
| Tim       |   35 |          702 |
| L         |   10 |          696 |
| Angela    |  101 |          694 |
| Crissy    |   25 |          676 |
| Lyn       |   45 |          675 |
+-----------+------+--------------+
(Output limit exceeded, 25 of 10000 total rows shown)

	
9. Are there more reviews with the word "love" or with the word "hate" in them? 

	Answer:Yes. There are 1780 reviews with “love” and 232 reviews with “hate”

	
	SQL code used to arrive at answer:
select count(text)
from review
where text like '%love%'


select count(text)
from review
where text like '%hate%'

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select name
,fans
from user
order by fans desc
limit 10
	
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes, it has the different distribution hours. The loblaws with 2.5 rating stars open from 8.00 to 22.00 on Saturday.
The halo brewery and Cabin Fever with higher rating stars open late on Saturday. 


ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, The group with 2.5 stars has less review (10) compared with the group with higher rating stars.        
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
No, they do have different locations. 
SQL code used for analysis:

select b.name 
,b.city
,c.category
,b.stars
,h.hours
,b.review_count
,b.address
,b.postal_code
from business as b 
inner join category as c on b.id = c.business_id
inner join hours as h on b.id = h.business_id
WHERE b.city = 'Toronto' AND c.category = "Food"
GROUP BY b.stars
having b.stars in (2,2.5,3,3.5,4,4.5,5)

+--------------+---------+----------+-------+----------------------+--------------+----------------------+-------------+
| name         | city    | category | stars | hours                | review_count | address              | postal_code |
+--------------+---------+----------+-------+----------------------+--------------+----------------------+-------------+
| Loblaws      | Toronto | Food     |   2.5 | Saturday|8:00-22:00  |           10 | 2280 Dundas Street W | M6R 1X3     |
| Halo Brewery | Toronto | Food     |   4.0 | Saturday|11:00-21:00 |           15 | 247 Wallace Avenue   | M6H 1V5     |
| Cabin Fever  | Toronto | Food     |   4.5 | Saturday|16:00-2:00  |           26 | 1669 Bloor Street W  | M6P 1A6     |
+--------------+---------+----------+-------+----------------------+--------------+----------------------+-------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
   The ones that are still open have more rating stars,total reviews count, reivews count on average than those ones that are closed      
         
ii. Difference 2:
    There are more business that are open with comments of 'funny' and 'cool' (26) than those ones that are closed     
         
         
SQL code used for analysis:

select b.is_open
,avg(b.stars) as 'Average rating'
,sum(b.review_count) as 'Total reviews'
,avg(b.review_count) as 'Average reviews'
,(count(r.funny) + count(r.cool)) as 'comments'
from business as b 
inner join review as r on b.id = r.id
group by is_open

+---------+----------------+---------------+-----------------+----------+
| is_open | Average rating | Total reviews | Average reviews | comments |
+---------+----------------+---------------+-----------------+----------+
|       0 |            2.0 |             4 |             4.0 |        2 |
|       1 |  2.96153846154 |           504 |   38.7692307692 |       26 |
+---------+----------------+---------------+-----------------+----------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
The analysis I picked up here is to study the preference among different types of food on yelp, using the rating stars, review counts, number of 
resturants as comprehensive evaluation.         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
The food category I choose here including'Chinese','Mexican','Canadian','Korean','Japanese','American','indian','itanlian','French', but not every one of them showing up. The purpose here is to analyze the popularity of different types of food on yelp. It turns out the Chinese food 
with the highest average at approximate 423 reviews in Las vegas with 4.0 rating stars. Korean food is with least reviews but hightest rating stars. What surprised me most the is the Janpanese food in Toronto. There are 20 Janpanese resturants, but with relatively low review count and low rating stars(2). It needs more analysis to identify the reason.           
                  
iii. Output of your finished dataset:
+-----------+----------+----------------------+-------------------+-------+----------------------+
| city      | category | Number of resturants | avg(review_count) | stars | hours                |
+-----------+----------+----------------------+-------------------+-------+----------------------+
| Toronto   | Korean   |                    7 |               8.0 |   4.5 | Saturday|11:00-23:00 |
| Las Vegas | French   |                   12 |     135.083333333 |   4.0 | Saturday|11:00-20:00 |
| Las Vegas | Chinese  |                   13 |     423.230769231 |   4.0 | Saturday|10:00-23:00 |
| Edinburgh | Mexican  |                   28 |              73.0 |   4.0 | Saturday|12:00-22:30 |
| Toronto   | Japanese |                   20 |             22.85 |   2.0 | Saturday|11:00-23:00 |
+-----------+----------+----------------------+-------------------+-------+----------------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

select b.city
,c.category 
,count(b.name) as 'Number of resturants'
,avg(review_count)
,b.stars
,h.hours
from business b 
inner join hours h on b.id = h.business_id
inner join category c on c.business_id = b.id
where c.category in
('Chinese', 'Mexican', 'Canadian','Korean', 'Japanese','American','indian','itanlian','French')
group by c.category
order by avg(stars) desc
